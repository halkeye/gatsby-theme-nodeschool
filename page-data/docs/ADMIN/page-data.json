{
    "componentChunkName": "component---gatsby-theme-nodeschool-src-templates-docs-jsx",
    "path": "/docs/ADMIN",
    "result": {"data":{"mdx":{"id":"d81f90ea-da99-5bb9-9af8-d5f007a9abec","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Adding an organizer\"), mdx(\"p\", null, \"Adding a new person to the organizers team? That\\u2019s great! Here\\u2019s a list of some places that should be updated to include the new organizer.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nodeschool/email/blob/master/nodeschool.io/aliases.json\"\n  }, \"email aliases\"), \": This lets the new organizer receive emails sent to the official NodeSchoolYVR email. Listed organizers receive all emails sent to the email alias.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nodeschool/nodeschool.github.io/blob/source/chapters/vancouver.json\"\n  }, \"chapter metadata\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fields":{"slug":"/docs/ADMIN"}}},"pageContext":{"id":"d81f90ea-da99-5bb9-9af8-d5f007a9abec","language":"en","i18n":{"language":"en","languages":["en"],"defaultLanguage":"en","generateDefaultLanguagePage":false,"routed":false,"originalPath":"/docs/ADMIN","path":"/docs/ADMIN"}}},
    "staticQueryHashes": ["735375095"]}