{"version":3,"sources":["webpack:///./src/components/events/single_event.js","webpack:///./src/components/events/past_events.js","webpack:///./src/components/events/upcoming_events.js","webpack:///./src/components/events/index.js","webpack:///./src/components/follow-twitter/index.jsx","webpack:///./src/components/community/index.jsx","webpack:///./src/components/sponsors/index.jsx","webpack:///./src/components/attendies/index.jsx","webpack:///./src/components/mentors/index.jsx","webpack:///./src/components/photos/index.jsx","webpack:///./src/components/NodeSchoolChapterLogo/index.jsx","webpack:///./src/components/events/footer.jsx","webpack:///./src/pages/index.js"],"names":["SingleEvent","description","name","venue","time","utc_offset","updated","dangerouslySetInnerHTML","__html","repinned","address_1","address_2","city","state","zip","country","lat","lon","localized_country_name","PastEvents","allMeetupEvent","edges","map","edge","node","UpcomingEvents","Events","FollowTwitter","data","href","site","siteMetadata","twitter","className","data-show-count","Community","id","slack","filter","Boolean","join","Sponsors","Attendies","Mentors","xmlns","version","xmlnsXlink","allMentorsYaml","key","width","height","patternUnits","xlinkHref","github","preserveAspectRatio","rel","target","viewBox","points","fill","Photos","NodeSchoolChapterLogo","style","margin","src","placeholderImage","publicURL","alt","title","marginLeft","marginRight","display","maxWidth","fontSize","lineHeight","textAlign","fontWeight","letterSpacing","color","EventFooter","email","l","IndexPage","action","method","type","value","position","left","tabIndex","event","frameBorder","border","allowFullScreen"],"mappings":"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","file":"component---src-pages-index-js-5fbbae459ba405e76fde.js","sourcesContent":["import React from \"react\";\nexport const SingleEvent = ({description, name, venue, time, utc_offset, updated, }) => {\n  return (\n    <div>\n      <h1>{name}</h1>\n      <div dangerouslySetInnerHTML={{ __html:  description }} />\n      <div>\n        {venue.name}\n        {venue.repinned}\n        {venue.address_1}\n        {venue.address_2}\n        {venue.city}\n        {venue.state}\n        {venue.zip}\n        {venue.country}\n        {venue.lat},{venue.lon}\n        {venue.localized_country_name}\n      </div>\n    </div>\n  );\n};\n\n\nexport default SingleEvent;\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport SingleEvent from './single_event';\n\nexport const PastEvents = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMeetupEvent(filter: {status: {eq: \"post\"}}) {\n        edges {\n          node {\n            id\n            description\n            name\n            status\n            visibility\n            venue {\n              address_1\n              address_2\n              city\n              country\n              lat\n              localized_country_name\n              lon\n              name\n              repinned\n              state\n              zip\n            }\n            time\n            utc_offset\n            updated\n            rsvp_limit\n            member_pay_fee\n            local_time\n            link\n            how_to_find_us\n            duration\n            date_in_series_pattern\n            created\n          }\n        }\n      }\n    }\n  `);\n  return data.allMeetupEvent.edges.map(edge => <SingleEvent {...edge.node} />);\n};\n\nexport default PastEvents;\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport SingleEvent from './single_event';\n\nexport const UpcomingEvents = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMeetupEvent(filter: {status: {eq: \"upcoming\"}}) {\n        edges {\n          node {\n            id\n            description\n            name\n            venue {\n              address_1\n              address_2\n              city\n              country\n              lat\n              localized_country_name\n              lon\n              name\n              repinned\n              state\n              zip\n            }\n            time\n            utc_offset\n            updated\n            rsvp_limit\n            member_pay_fee\n            local_time\n            link\n            how_to_find_us\n            duration\n            date_in_series_pattern\n          }\n        }\n      }\n    }\n  `);\n  return data.allMeetupEvent.edges.map(edge => <SingleEvent {...edge.node} />);\n};\n\nexport default UpcomingEvents;\n\n\n\n","import React from \"react\";\nimport UpcomingEvents from './past_events.js';\nimport PastEvents from './upcoming_events.js';\n\nexport const Events = () => {\n  return (\n    <>\n      <UpcomingEvents />\n      <hr />\n      <PastEvents />\n    </>\n  );\n};\nexport default Events;\n\n\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nexport const FollowTwitter = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          twitter\n        }\n      }\n    }\n  `);\n  return (\n    <p>\n      <a\n        href={`https://twitter.com/${data.site.siteMetadata.twitter}`}\n        className=\"twitter-follow-button\"\n        data-show-count=\"false\"\n      >Follow @{data.site.siteMetadata.twitter}</a\n    >\n    </p>\n  );\n\n};\n\nexport default FollowTwitter;\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nexport const Community = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          twitter\n          slack\n        }\n      }\n    }\n  `);\n  return (\n    <>\n    <h2 id=\"community\">Community</h2>\n\n    <p>\n      The NodeSchool community is <strong>open to anyone</strong>. Whether\n      you're able to attend an event or not, you can join the discussion\n      around learning Node {\n        [\n          data.site.siteMetadata.slack ? 'in our Slack channel' : null,\n          data.site.siteMetadata.slack ? 'by following us on Twitter' : null\n        ].filter(Boolean).join(' or ')\n      }\n    </p>\n    </>\n  );\n};\nexport default Community;\n\n","import React from \"react\";\n\nexport const Sponsors = () => {\n  return (\n    <>\n      {/* sponsors */}\n      <h2 id=\"sponsors\">Sponsors</h2>\n      {/*\n        <div className=\"list-sponsors cf\">\n          <a href=\"https://shopify.com\">\n            <img src=\"i/shopify.svg\" />\n          </a>\n        </div>\n      */}\n    </>\n  );\n};\nexport default Sponsors;\n","import React from \"react\";\n\nexport const Attendies = () => {\n  return (\n    <>\n      {/* attendies */}\n      {/*\n            <h2 id=\"attendees\">Attendees</h2>\n\n            <div className=\"list-attendees cf\">\n              {% for value in site.data.attendees %} {% for attendee in value[1]\n              %} {% cycle '\n              <div className=\"row\">\n                ', '', '', '', '', '', '', '' %}\n                <div className=\"image-wrapper\">\n                  <div className=\"badge\">\n                    <span>{{ attendee[2] }}</span>\n                  </div>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 250 300\"\n                    version=\"1.1\"\n                    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                  >\n                    <polygon\n                      className=\"hex\"\n                      points=\"250,75 250,225 125,300 0,225 0,75 125,0\"\n                      fill=\"url('#attendee-{{ attendee[0] }}')\"\n                    ></polygon>\n                  </svg>\n                </div>\n                {% cycle '', '', '', '', '', '', '', '\n              </div>\n              ' %} {% endfor %} {% endfor %}\n            </div>\n      */}\n    </>\n  );\n};\nexport default Attendies;\n\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nexport const Mentors = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          github\n        }\n      }\n      allMentorsYaml {\n        edges {\n          node {\n            id\n            github\n            name\n            twitter\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <>\n      <h2 id=\"mentors\">Mentors</h2>\n      {/* mentors */}\n      <svg\n        className=\"svgs\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      >\n        <defs>\n          {data.allMentorsYaml.edges.map(edge => (\n            <pattern\n              id={`mentor-${edge.node.id}`}\n              key={edge.node.id}\n              width=\"300\"\n              height=\"300\"\n              patternUnits=\"userSpaceOnUse\"\n            >\n              <image\n                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                xlinkHref={`https://avatars3.githubusercontent.com/${ edge.node.github }?v=3&amp;s=250`}\n                width=\"250\"\n                height=\"300\"\n                preserveAspectRatio=\"xMidYMid slice\"\n              ></image>\n            </pattern>\n          ))}\n        </defs>\n      </svg>\n      <div className=\"list-mentors cf\">\n        {data.allMentorsYaml.edges.map(edge => (\n            <a\n              key={edge.node.id}\n              href={edge.node.twitter ? `https://twitter.com/${edge.node.twitter}` : `https://github.com/${edge.node.github}`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              className=\"image-wrapper\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 250 300\" version=\"1.1\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n                <polygon className=\"hex\" points=\"250,75 250,225 125,300 0,225 0,75 125,0\" fill={`url('#mentor-${edge.node.id}')`}></polygon>\n              </svg>\n            </a>\n        ))}\n        <p>\n          If you want to help teach or contribute in anyway, make a\n          <strong>\n            <a href={`https://github.com/${data.site.siteMetadata.github}/pulls`}>\n            Pull Request\n            </a>\n          </strong>\n          and add your name to the list of available mentors. We also ask\n          that you please read the\n          <a href=\"https://github.com/nodeschool/organizers/wiki/Event-Mentor-Best-Practices#on-being-a-mentor\">\n            &quot;On Being a Mentor&quot;\n          </a>\n          tips for <strong>NodeSchool Organizers</strong> before attending as a mentor.\n        </p>\n\n        {/*\n        <p>\n          Mentors are currently <strong>contacted and confirmed</strong> before each event in our\n          <a href=\"https://nodeschool-toronto-slackin.herokuapp.com/\">Slack Channel</a>.\n        </p>\n        */}\n      </div>\n      {/*\n            <div className=\"list-mentors cf\">\n              {% for mentor in site.mentors %} {% cycle '\n              <div className=\"row\">\n                ', '', '', '', '' %}\n                <a\n                  href=\"https://twitter.com/{{ mentor.twitter }}\"\n                  target=\"_blank\"\n                  className=\"image-wrapper\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 250 300\"\n                    version=\"1.1\"\n                    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                  >\n                    <polygon\n                      className=\"hex\"\n                      points=\"250,75 250,225 125,300 0,225 0,75 125,0\"\n                      fill=\"url('#mentor-{{ forloop.index }}')\"\n                    ></polygon>\n                  </svg>\n                </a>\n                {% cycle '', '', '', '', '\n              </div>\n              ' %} {% endfor %}\n            </div>\n            */}\n    </>\n  );\n};\nexport default Mentors;\n\n","import React from \"react\";\n\nexport const Photos = () => {\n  return (\n    <>\n      <h2 id=\"photos\">Photos</h2>\n      {/* \n\n          <div className=\"list-photos cf\">\n            {% for i in (1..30) %} {% cycle '\n            <div className=\"row\">\n              ', '', '', '', '' %}\n              <a\n                href=\"i/photos/{{ i }}.jpg\"\n                target=\"_blank\"\n                className=\"image-wrapper\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 250 300\"\n                  version=\"1.1\"\n                  xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                >\n                  <polygon\n                    className=\"hex\"\n                    points=\"250,75 250,225 125,300 0,225 0,75 125,0\"\n                    fill=\"url('#photo-{{ i }}')\"\n                  ></polygon>\n                </svg>\n              </a>\n              {% cycle '', '', '', '', '\n            </div>\n            ' %} {% endfor %}\n          </div>\n      */}\n    </>\n  );\n};\nexport default Photos;\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst NodeSchoolChapterLogo = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      placeholderImage: file(relativePath: { eq: \"nodeschool-vancouver-logo.svg\" }) {\n        extension\n        publicURL\n      }\n    }\n  `);\n  return (\n    <div style={{\n      margin: 'auto'\n    }}>\n      <div style={{ width: '100%', height: '100%' }}>\n        <img\n          src={data.placeholderImage.publicURL}\n          alt={data.site.siteMetadata.title}\n          style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            display: 'block',\n            width: '250px',\n            maxWidth: '250px'\n          }}\n        />\n      </div>\n\n      <h1 style={{\n        fontSize: '50px',\n        lineHeight: '140%',\n        textAlign: 'center',\n        fontWeight: '300',\n        margin: '0 auto 60px',\n        letterSpacing: '-1px',\n        color: '#C0493D', // FIXME - siteMeta color\n      }}>\n        Welcome to\n        <br />\n        {data.site.siteMetadata.title}\n      </h1>\n    </div>\n  );\n};\n\nexport default NodeSchoolChapterLogo;\n\n","import React from 'react';\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nexport const EventFooter = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          email\n        }\n      }\n    }\n  `);\n  return (\n    <p className=\"additional\">\n      <strong>NodeSchool</strong> strives to be a welcoming and safe event for all attendees.\n      Attendees should follow the <a href=\"#codeofconduct\">code of conduct</a>.\n      If you need further information about an event, please contact the organizers at \n      <a\n        style={{fontWeight: `bold`}}\n        href={`mailto:${data.site.siteMetadata.email}`} l\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        {` ` + data.site.siteMetadata.email}\n      </a>\n    </p>\n  );\n};\n\nexport default EventFooter;\n","import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Events from \"../components/events\";\nimport FollowTwitter from \"../components/follow-twitter\";\nimport Community from \"../components/community\";\nimport Sponsors from \"../components/sponsors\";\nimport Attendies from \"../components/attendies\";\nimport Mentors from \"../components/mentors\";\nimport Photos from \"../components/photos\";\nimport NodeSchoolChapterLogo from \"../components/NodeSchoolChapterLogo\";\nimport EventFooter from \"../components/events/footer\";\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n\n    <main className=\"main cf\">\n      <section className=\"panel text\">\n        <div className=\"container\">\n          <NodeSchoolChapterLogo />\n          <Community />\n          <FollowTwitter />\n\n          <div className=\"mailinglist\">\n            <h3>Get Notified</h3>\n\n            <p>\n              Make sure you know what&apos;s going on within the community and\n              whenever we&apos;re having an event by signing up to our mailing list\n              below:\n            </p>\n\n            <form\n              action=\"https://nodeschool.us11.list-manage.com/subscribe/post?u=62145c918d78960a0c95987c2&amp;id=ec5cf6637f\"\n              method=\"post\"\n              target=\"_blank\"\n            >\n              <label className=\"firstname\">\n                <span>First Name</span>\n                <input type=\"text\" value=\"\" name=\"FNAME\" className=\"\" />\n              </label>\n              <label className=\"lastname\">\n                <span>Last Name</span>\n                <input type=\"text\" value=\"\" name=\"LNAME\" className=\"\" />\n              </label>\n              <label className=\"email\">\n                <span>Email Address</span>\n                <input\n                  type=\"email\"\n                  value=\"\"\n                  name=\"EMAIL\"\n                  className=\"required email\"\n                />\n              </label>\n              <div style={{ position: `absolute`, left: `-5000px` }}>\n                <input\n                  type=\"text\"\n                  name=\"b_62145c918d78960a0c95987c2_ec5cf6637f\"\n                  tabIndex=\"-1\"\n                  value=\"\"\n                />\n              </div>\n              <input type=\"submit\" value=\"Subscribe\" name=\"subscribe\" />\n            </form>\n          </div>\n\n          <h2 id=\"events\">Events</h2>\n          <p>\n            <strong>NodeSchool Vancouver</strong> events are run by an\n            enthusiastic group of volunteers. The workshops will be held monthly\n            and will always be free.\n          </p>\n          <p>\n            The events offer a low-key environment to learn or practice Node and\n            are generally three hours long.\n          </p>\n\n          <h2 id=\"faq\">Frequently Asked Questions</h2>\n\n          <h3>&quot;What should I expect?&quot;</h3>\n          <p>\n            NodeSchool is a self-directed learning environment, where you bring\n            your own laptop to learn. The intention is for attendees to work on\n            the Node workshops from\n            <a href=\"http://nodeschool.io/#workshopper-list\" target=\"_blank\"\n              >nodeschool.io</a\n            >. But if you have a personal project you are working on, do it! The\n            goal of NodeSchool is to help people explore and learn Node. There\n            will be mentors on hand at the events to help you when you hit any\n            road blocks.\n          </p>\n\n          <h3>&quot;How do I install Node?&quot;</h3>\n          <p>\n            Our recommended way to install Node is through something called\n            &quot;Homebrew&quot;.\n          </p>\n          <p className=\"indent\">\n            <strong>1.</strong> Install Homebrew by copying the following\n            command into a terminal/bash prompt:\n          </p>\n          <code className=\"terminal\"\n            ><pre>\n$ ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</pre\n            >\n          </code>\n          <p className=\"indent\">\n            <strong>2.</strong> Once installed, run\n            <code>brew install node</code> which should install the latest\n            version of Node.\n          </p>\n          <p>\n            If you have any issues installing either Homebrew or Node no\n            worries. We&apos;ll do our best to help you get set up once you arrive at\n            an event.\n          </p>\n\n          <h3>&quot;What is a Workshopper?&quot;</h3>\n          <p>\n            Workshopper is the name used for the open source lesson modules\n            associated with NodeSchool. All are self guided (you don&apos;t need to\n            attend a workshop to do one) and most work offline.\n          </p>\n\n          <h3>&quot;How do I run a Workshopper?&quot;</h3>\n          <p>\n            To get started with a Workshopper tutorial you&apos;ll have to install\n            and then run that program in terminal/bash. Here&apos;s an example of how\n            to install and run the Beginner Node Workshopper:\n          </p>\n          <code className=\"terminal\">\n            <pre>$ npm install -g learnyounode</pre>\n            <pre>$ learnyounode</pre>\n          </code>\n\n          <Photos />\n\n          <h2 id=\"codeofconduct\">Code of Conduct</h2>\n\n          <p>\n            We, the organizers of <strong>NodeSchool Vancouver</strong>, are\n            dedicated to providing a harassment-free community for everyone,\n            regardless of sex, gender identity or expression, sexual\n            orientation, disability, physical appearance, age, body size, race,\n            nationality, or religious beliefs. We do not tolerate harassment of\n            community members in any form. Participants violating these rules\n            may be sanctioned or expelled from the community at the discretion\n            of the organizers of <strong>NodeSchool Vancouver</strong>.\n          </p>\n\n          <p>\n            Harassment includes offensive verbal or written comments related to\n            sex, gender identity or expression, sexual orientation, disability,\n            physical appearance, age, body size, race, nationality, or religious\n            beliefs, deliberate intimidation, threats, stalking, following,\n            harassing photography or recording, sustained disruption of talks or\n            other events, inappropriate physical contact, and unwelcome sexual\n            attention. Sexual language and imagery is not appropriate for any\n            events at <strong>NodeSchool Vancouver</strong> meetups or in any\n            related communication channels. Community members asked to stop any\n            harassing behavior are expected to comply immediately. Sponsors and\n            presenters are also subject to the anti-harassment policy.\n          </p>\n\n          <p>\n            If a community member engages in harassing behavior, the organizers\n            of <strong>NodeSchool Vancouver</strong> may take any action they deem\n            appropriate, including warning the offender or expulsion from the\n            community. If you are being harassed, notice that someone else is\n            being harassed, or have any concerns, please contact an organizer\n            immediately.\n          </p>\n\n          <div className=\"footer\">\n            <h2 id=\"credit\">Credits</h2>\n\n            <p className=\"credit\">\n              The NodeSchool Vancouver Hex Logo was kindly designed by\n              <a href=\"http://willduart.com/\">Will Du</a>.\n            </p>\n\n            <p className=\"links\">\n              <a\n                href=\"https://ti.to/nodeschool-vancouver\"\n                title=\"NodeSchool Vancouver Event\"\n                >Events</a\n              >\n              <span className=\"divider\">|</span>\n              <a\n                href=\"https://twitter.com/NodeSchoolTO\"\n                title=\"NodeSchool Vancouver Twitter\"\n                >Twitter</a\n              >\n              <span className=\"divider\">|</span>\n              <a\n                href=\"https://github.com/nodeschool/vancouver\"\n                title=\"NodeSchool Vancouver GitHub\"\n                >GitHub</a\n              >\n              <span className=\"divider\">|</span>\n              <a href=\"http://nodeschool.io/\" title=\"NodeSchool\"\n                >NodeSchool.io</a\n              >\n            </p>\n          </div>\n        </div>\n      </section>\n\n      <aside className=\"panel side\">\n        <div className=\"container\">\n          <div className=\"inner\">\n            {/* nodeschool.io info */}\n\n            <a className=\"logo\" href=\"http://nodeschool.io\">\n              <img src=\"i/schoolhouse-beige.svg\" alt=\"NodeSchool Logo\" />\n              <p className=\"about\">\n                <strong>NodeSchool</strong> is a selection of open source\n                workshops that teach web software skills. You can do them on\n                your own or at one of the monthly\n                <strong>NodeSchool Vancouver</strong> events.\n              </p>\n            </a>\n\n            {/* event badge */}\n\n            <div className=\"event\">\n              <p className=\"register\">\n                <strong>Register</strong> for our event on\n                <strong>Sat, April 27th</strong>\n              </p>\n              <tito-widget\n                event=\"nodeschool-vancouver/node-school-vancouver-april-2019\"\n              ></tito-widget>\n              <p className=\"location\">\n                <strong>Location:</strong>&nbsp; Resolver 111 Peter St #804,\n                Vancouver, ON M5V 2H1\n              </p>\n              <div className=\"map\">\n                <iframe\n                  title=\"google maps\"\n                  src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2887.0147250836303!2d-79.39509158478407!3d43.64786197912144!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x882b4807d4c28f57%3A0x405949782aee2b5e!2sResolver+Inc.!5e0!3m2!1sen!2sca!4v1533828430167\"\n                  width=\"600\"\n                  height=\"450\"\n                  frameBorder=\"0\"\n                  style={{border:0}}\n                  allowFullScreen\n                ></iframe>\n              </div>\n              <p className=\"schedule\">\n                <strong>Schedule</strong>\n              </p>\n              <ul className=\"timeline\">\n                <li className=\"row\">\n                  <span className=\"time\">12:45pm - 1:00pm</span>\n                  <span className=\"name\">Registration</span>\n                </li>\n                <li className=\"row\">\n                  <span className=\"time\">1:00pm - 1:30pm</span>\n                  <span className=\"name\"\n                    >Presentations:<br />\n                    <strong>TBD</strong>\n                  </span>\n                </li>\n                <li className=\"row\">\n                  <span className=\"time\">1:30pm - 3:30pm</span>\n                  <span className=\"name\">Workshop Time</span>\n                </li>\n                <li className=\"row\">\n                  <span className=\"time\">3:30pm - 4:00pm</span>\n                  <span className=\"name\">Demos</span>\n                </li>\n              </ul>\n              <EventFooter />\n            </div>\n\n\n            <Mentors />\n            <Attendies />\n            <Sponsors />\n          </div>\n\n        </div>\n      </aside>\n    </main>\n\n    <Events />\n  </Layout>\n);\n\nexport default IndexPage;\n"],"sourceRoot":""}